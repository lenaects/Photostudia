@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace PhotoStudia_1.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <base href="/" />
    <link href="css/site.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/@@turf/turf@6.5.0/turf.min.js"></script>
    <script src="https://unpkg.com/@@urf/turf/turf.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@turf/turf@6/turf.min.js"></script>
    <!-- Подключаем твой JS с картой -->
    <script src="js/mapService.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>
    <script>
        function drawServiceChart(data) {
            const labels = data.map(x => x.serviceName);
            const orderCounts = data.map(x => x.orderCount);
            const hoursSpent = data.map(x => x.hoursSpent);
            const earnings = data.map(x => x.earnings);

            const canvas = document.getElementById('serviceChart');
            const ctx = canvas.getContext('2d');

            // ⛔ Отключаем автоматическое масштабирование
            canvas.style.width = '900px';
            canvas.style.height = '400px';
            canvas.width = 900;
            canvas.height = 400;

            if (window.myChart) {
                window.myChart.destroy();
            }

            window.myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Количество заказов',
                            data: orderCounts,
                            backgroundColor: '#D26A5A',
                            datalabels: {
                                anchor: 'end',
                                align: 'top',
                                formatter: (_, ctx) => `₽${earnings[ctx.dataIndex].toFixed(0)}`
                            }
                        },
                        {
                            label: 'Часы работы',
                            data: hoursSpent,
                            backgroundColor: '#5A8FD2',
                            datalabels: { display: false }
                        }
                    ]
                },
                options: {
                    responsive: false, // 🚫 отключить адаптивность
                    maintainAspectRatio: false, // 🚫 отключить соотношение сторон
                    animation: false, // 🚫 отключить анимации
                    plugins: {
                        datalabels: {
                            color: '#000',
                            font: { weight: 'bold' }
                        },
                        legend: { position: 'top' },
                        title: {
                            display: true,
                            text: 'Статистика по услугам',
                            font: { size: 18 }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: { stepSize: 1 }
                        }
                    }
                },
                plugins: [ChartDataLabels]
            });
        }
        function drawAdminCharts(photographers, services) {
            const ctx1 = document.getElementById('photographerChart').getContext('2d');
            const ctx2 = document.getElementById('serviceChart').getContext('2d');

            if (window.photographerChart && typeof window.photographerChart.destroy === 'function') {
                window.photographerChart.destroy();
            }
            if (window.serviceChart && typeof window.serviceChart.destroy === 'function') {
                window.serviceChart.destroy();
            }

            window.photographerChart = new Chart(ctx1, {
                type: 'bar',
                data: {
                    labels: photographers.map(p => `${p.name} (${p.rating}★)`),
                    datasets: [
                        {
                            label: 'Заказы',
                            data: photographers.map(p => p.orderCount),
                            backgroundColor: '#5A8FD2'
                        },
                        {
                            label: 'Часы',
                            data: photographers.map(p => p.hoursWorked),
                            backgroundColor: '#D26A5A'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Работа фотографов за месяц'
                        },
                        legend: { position: 'top' }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: { stepSize: 1 }
                        }
                    }
                }
            });

            window.serviceChart = new Chart(ctx2, {
                type: 'bar',
                data: {
                    labels: services.map(s => s.serviceName),
                    datasets: [
                        {
                            label: 'Количество заказов',
                            data: services.map(s => s.orderCount),
                            backgroundColor: '#3B82F6' // синий
                        },
                        {
                            label: 'Часы проведения',
                            data: services.map(s => s.hoursWorked),
                            backgroundColor: '#A855F7' // фиолетовый
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Популярность услуг'
                        },
                        legend: { position: 'top' }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: { stepSize: 1 }
                        }
                    }
                }
            });
        }
    </script>
    <!-- Подключаем твой JS c заявками -->
    <link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="js/datepicker.js"></script>
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>

</body>
</html>
